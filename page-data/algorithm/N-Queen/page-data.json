{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/algorithm/N-Queen/","result":{"data":{"markdownRemark":{"fields":{"slug":"/algorithm/N-Queen/"},"html":"<h2>N-Queens</h2>\n<blockquote>\n<p>N개의 여왕을 N X N 체스판에 잡아 먹히지 않도록 놓는 방법 의 수를 찾기. (여왕은 대각선, 같은행, 같은열에 있는 것들을 먹어 치운다)</p>\n</blockquote>\n<h3>풀이방법</h3>\n<ol>\n<li>N개의 여왕을 각각 N개의 행에 자리를 준다.</li>\n<li>2번째 열부터 대각선에 여왕이 있는지, 같은열에 여왕이 있는지 검사한다.</li>\n<li>재귀호출을 통해 탐색하고 싶은 행을 1 늘린다.</li>\n<li>현재 행의위치가 N이 되면 모든 여왕이 자리를 잡은 것이기 때문에 <code class=\"language-text\">count + 1</code> !!</li>\n</ol>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-py line-numbers\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">n_queen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> now_row<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> now_row <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    \n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    \n    <span class=\"token comment\"># 현재 탐색하고 있는 row에 0~n까지 col의 위치를 넣어준다. (대각선, 같은 열에 여왕이 없을 때)</span>\n    <span class=\"token comment\"># 0~n개의 경우의 수를 다 확인하는 방법. 조건에 맞지 않으면 재귀 호출 X</span>\n    <span class=\"token keyword\">for</span> now_col <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">if</span> is_promising<span class=\"token punctuation\">(</span>now_col<span class=\"token punctuation\">,</span> now_row<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            cols<span class=\"token punctuation\">[</span>now_row<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> now_col\n            count <span class=\"token operator\">+=</span> n_queen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> now_row <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span>\n            \n    <span class=\"token keyword\">return</span> count\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">is_promising</span><span class=\"token punctuation\">(</span>now_col<span class=\"token punctuation\">,</span> now_row<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> prev_row <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>now_row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 대각선 여부</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>cols<span class=\"token punctuation\">[</span>prev_row<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> now_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> now_row <span class=\"token operator\">-</span> pre_row<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token comment\"># 같은 열에 여왕이 있는지 여부</span>\n        <span class=\"token keyword\">if</span> cols<span class=\"token punctuation\">[</span>prev_row<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> now_col<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n            \n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    \n    \nn_queen<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"N-queens[Python]","tags":["N-queens","algorithm","python"]}}},"pageContext":{"slug":"/algorithm/N-Queen/","next":"/algorithm/djikstra/","nextTitle":"다익스트라 Dijkstra 알고리즘 [Python]","previous":"/algorithm/kruskal/","previousTitle":"[크루스칼 알고리즘 - 파이썬]"}},"staticQueryHashes":["3501822393"]}