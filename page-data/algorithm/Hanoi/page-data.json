{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/algorithm/Hanoi/","result":{"data":{"markdownRemark":{"fields":{"slug":"/algorithm/Hanoi/"},"html":"<blockquote>\n<p>가운데 기둥을 이용해서 왼쪽 기둥에 놓인 크기가 다른 원판을 오른쪽 기둥으로 옮기는 문제,\n이 때 원판은 한번에 한 개씩만 옮길 수 있으며, 작은 원판 위에 큰 원판이 놓일 수 없다.</p>\n</blockquote>\n<p>재귀 풀이를 이용하여 푸는 문제중에서 가장 유명한 문제.</p>\n<h2>풀이 방법</h2>\n<h3>1. 한번에 다 처리하지 말자</h3>\n<ul>\n<li>\n<p>그러면 어떻게?</p>\n<ul>\n<li>일반화를 하기 위해, 움직임을 포착하자.</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/jwisgenius/post/c8db629f-3577-48cf-b9b9-e4015a9caf19/image.png\"></p>\n<p>일단, 3개의 원판이 있을때, A기둥에서 C기둥으로 옮긴다고 하면, 2개의 원판을 B기둥으로 옮기고, 나머지 1개(가장 작은 것)를 C기둥으로 옮겨야한다.</p>\n<p>   2개의 원판을 B기둥으로 옮기기 위해서 맨위의 1번째 원판을 C기둥으로 옮기고 2번째 원판을 B기둥으로 옮긴다음에, 다시 1번째 원판을 B기둥으로 옮긴다.</p>\n<p>   이렇게 되면 A기둥에는 제일 큰 원판이 남는데, 그것을 C기둥으로 옮긴다.</p>\n<p>   그리고 B기둥에 있는 것을 C기둥으로 옮기는 작업을 위와 같은 원리로 하면 된다.</p>\n<ul>\n<li>그러면, 위에서 말로 푼 것을 어떻게 일반화?</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-css line-numbers\"><code class=\"language-css\">가장 중요한 것은 어떤 하나의 기둥<span class=\"token punctuation\">(</span>START<span class=\"token punctuation\">)</span> 에 있는 원판들을 C기둥<span class=\"token punctuation\">(</span>TARGET<span class=\"token punctuation\">)</span> 으로 옮겨야 할 때<span class=\"token punctuation\">,</span>  마지막의 원판만 C기둥으로 옮기기 위해서는 나머지 원판은 C기둥을 제외한 비어있는 원판<span class=\"token punctuation\">(</span>EMPTY == 6 - <span class=\"token punctuation\">(</span>start + target<span class=\"token punctuation\">)</span>으로 옮겨놔야 한다.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>즉, A기둥에 있는 원판 N개를 C기둥으로 옮기기 위해서는, 밑의 과정 을 모든 원판이 C기둥에 있을 떄까지 반복하면 된다.\n</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ruby line-numbers\"><code class=\"language-ruby\"><span class=\"token number\">1.</span> <span class=\"token constant\">A</span>기둥에 있는 <span class=\"token constant\">N</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> 개의 기둥을 <span class=\"token constant\">B</span>기둥으로 옮긴다<span class=\"token punctuation\">.</span>\n     \n<span class=\"token number\">2.</span> <span class=\"token constant\">A</span> 기둥에 있는 <span class=\"token number\">1</span>개의 기둥<span class=\"token punctuation\">(</span>맨 마지막 기둥<span class=\"token punctuation\">)</span> 을 <span class=\"token constant\">C</span>기둥으로 옮긴다<span class=\"token punctuation\">.</span>\n     \n<span class=\"token number\">3.</span> <span class=\"token constant\">B</span>기둥으로 옮긴 <span class=\"token constant\">N</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> 개의 기둥을 <span class=\"token constant\">C</span>기둥으로 옮긴다<span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-py line-numbers\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> empty<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    hanoi<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> empty<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    hanoi<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> empty<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>array<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    hanoi<span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nhanoi<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"하노이의 탑[Python]","tags":["Hanoi","algorithm","python","하노이의 탑"]}}},"pageContext":{"slug":"/algorithm/Hanoi/","next":"/algorithm/kruskal/","nextTitle":"[크루스칼 알고리즘 - 파이썬]","previous":"/algorithm/joystick/","previousTitle":"[프로그래머스 LV2] 조이스틱"}},"staticQueryHashes":["3501822393"]}