{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/algorithm/long-palindrome/","result":{"data":{"markdownRemark":{"fields":{"slug":"/algorithm/long-palindrome/"},"html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/12904\"><img src=\"https://images.velog.io/images/jwisgenius/post/5315e8d0-133b-47d0-beba-ced1291f047a/image.png\" alt=\"문제설명\"></a></p>\n<h2>접근방법</h2>\n<p> S의 길이가 n이라고 할 때, <code class=\"language-text\">0부터 N - 1 까지 의 문자열</code> 이 가장 긴 문자열이다.\n즉, <code class=\"language-text\">0부터 N-1, N-2, N-3, ... , 0 까지</code>, <code class=\"language-text\">1부터 N-1, N-2, ... , 1 까지</code> ⋯⋯ <code class=\"language-text\">N부터 N까지</code> 이런 식으로 반복하며, 각각의 문자열이 펠린드롬인지 확인해주면 된다. answer 값에 문자열의 길이를 변경하며 가장 긴 길이를 구한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-py line-numbers\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 문자열의 길이가 현재 저장된 문자열의 길이보다 짧으면 break</span>\n            <span class=\"token comment\"># 어느 순간, j - i 가 변경되지 않아도 그냥 answer보다 짧아지는 경우도 break로 연산을 막는다</span>\n            <span class=\"token keyword\">if</span> j <span class=\"token operator\">-</span> i <span class=\"token operator\">&lt;</span> answer<span class=\"token punctuation\">:</span> \n                <span class=\"token keyword\">break</span>\n                        \n            <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                answer <span class=\"token operator\">=</span> j <span class=\"token operator\">-</span> i\n                <span class=\"token keyword\">break</span>\n            \n\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"[프로그래머스 LV3] 가장 긴 팰린드롬","tags":["파이썬","알고리즘","algorithm","python","프로그래머스"]}}},"pageContext":{"slug":"/algorithm/long-palindrome/","next":"/algorithm/makeBigNumber/","nextTitle":"[프로그래머스 LV2] 큰 수 만들기","previous":"/algorithm/djikstra/","previousTitle":"다익스트라 Dijkstra 알고리즘 [Python]"}},"staticQueryHashes":["3501822393"]}